{
  "_args": [
    [
      {
        "raw": "y18n@^5.0.5",
        "scope": null,
        "escapedName": "y18n",
        "name": "y18n",
        "rawSpec": "^5.0.5",
        "spec": ">=5.0.5 <6.0.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\karma\\node_modules\\yargs"
    ]
  ],
  "_from": "y18n@^5.0.5",
  "_hasShrinkwrap": false,
  "_id": "y18n@5.0.8",
  "_location": "/karma/y18n",
  "_nodeVersion": "14.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/y18n_5.0.8_1617821853833_0.037626956652615284"
  },
  "_npmUser": {
    "name": "oss-bot",
    "email": "bencoe+oss-bot@gmail.com"
  },
  "_npmVersion": "6.14.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "y18n@^5.0.5",
    "scope": null,
    "escapedName": "y18n",
    "name": "y18n",
    "rawSpec": "^5.0.5",
    "spec": ">=5.0.5 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/karma/yargs"
  ],
  "_resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
  "_shasum": "7f4934d0f7ca8c56f95314939ddcd2dd91ce1d55",
  "_shrinkwrap": null,
  "_spec": "y18n@^5.0.5",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\karma\\node_modules\\yargs",
  "author": {
    "name": "Ben Coe",
    "email": "bencoe@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yargs/y18n/issues"
  },
  "dependencies": {},
  "description": "the bare-bones internationalization library used by yargs",
  "devDependencies": {
    "@types/node": "^14.6.4",
    "@wessberg/rollup-plugin-ts": "^1.3.1",
    "c8": "^7.3.0",
    "chai": "^4.0.1",
    "cross-env": "^7.0.2",
    "gts": "^3.0.0",
    "mocha": "^8.0.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.26.10",
    "standardx": "^7.0.0",
    "ts-transform-default-export": "^1.0.2",
    "typescript": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
    "shasum": "7f4934d0f7ca8c56f95314939ddcd2dd91ce1d55",
    "tarball": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
    "fileCount": 9,
    "unpackedSize": 23435,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbgCeCRA9TVsSAnZWagAAe28P/1xPOIpeRSlxJ9fnToSn\n7oM9pOZJa9eijf47kkR2D+Djvh6Wt0QFZNOOF9aHFtTtu1OZKvAnsos9tXiM\n12HsrfHxjSaO1P7uvpYt6CLRfzoFXCOakeImNyIEPTg+K107WhkdP1/9JZ9X\nq/cSQfwyzwEuSoMNWA9u6dAKwwvWKojDz/64eEvsoiLP/e/VANGBYHMtipNt\niLMrZkaRLGKzxlv/g2/E+bAbUaG6Qk3f0VEqOjMMLyoGGDqF0pitoXUpGjeg\nw4u8F0KVuxoI54QOkyJzVO6yoN0knXFZHVIX2ZGRaS7kQyM8uHF4KzNuTnDs\n+FQCJfPAVT5w3qPF7i+NDEy2WS7waGkA4K7Drqto325sFLluguNXSpTsiRTT\nzlEEEDtAclNsBZbEt4WJNjS/7AzhZUDMBS7hf1LbwHLjnK4C8HYV7uSiPESG\nzRyysFcqAe19yQo+N1gK/RL+ObuU/raOpK9WLTwZGc2+yCBy7+4CDGca02dO\nn08B0DTKV2ufTRyDY4uUxxO405Dkk5tWHfFBZYe5vC1Li796MDyOTkzGSwtE\nlqBEo1qqyXKw+erstSkV/Delp1klcFBYiRNspLQOTEtf2NsRlG8Wf6Ess4XB\nLLWS4lnHGl3ZZuxznOg3uEvBsEh/uV+sx2pB30Odw6geVJ7xl2Epm52iE65y\ndl5S\r\n=nxJd\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "exports": {
    ".": [
      {
        "import": "./index.mjs",
        "require": "./build/index.cjs"
      },
      "./build/index.cjs"
    ]
  },
  "files": [
    "build",
    "index.mjs",
    "!*.d.ts"
  ],
  "gitHead": "e2900d1cdf313663bba012f20737385a42c66b87",
  "homepage": "https://github.com/yargs/y18n",
  "keywords": [
    "i18n",
    "internationalization",
    "yargs"
  ],
  "license": "ISC",
  "main": "./build/index.cjs",
  "maintainers": [
    {
      "name": "bcoe",
      "email": "bencoe@gmail.com"
    },
    {
      "name": "nexdrew",
      "email": "andrewbgoode@gmail.com"
    },
    {
      "name": "oss-bot",
      "email": "bencoe+oss-bot@gmail.com"
    }
  ],
  "module": "./build/lib/index.js",
  "name": "y18n",
  "optionalDependencies": {},
  "readme": "# y18n\n\n[![NPM version][npm-image]][npm-url]\n[![js-standard-style][standard-image]][standard-url]\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n\nThe bare-bones internationalization library used by yargs.\n\nInspired by [i18n](https://www.npmjs.com/package/i18n).\n\n## Examples\n\n_simple string translation:_\n\n```js\nconst __ = require('y18n')().__;\n\nconsole.log(__('my awesome string %s', 'foo'));\n```\n\noutput:\n\n`my awesome string foo`\n\n_using tagged template literals_\n\n```js\nconst __ = require('y18n')().__;\n\nconst str = 'foo';\n\nconsole.log(__`my awesome string ${str}`);\n```\n\noutput:\n\n`my awesome string foo`\n\n_pluralization support:_\n\n```js\nconst __n = require('y18n')().__n;\n\nconsole.log(__n('one fish %s', '%d fishes %s', 2, 'foo'));\n```\n\noutput:\n\n`2 fishes foo`\n\n## Deno Example\n\nAs of `v5` `y18n` supports [Deno](https://github.com/denoland/deno):\n\n```typescript\nimport y18n from \"https://deno.land/x/y18n/deno.ts\";\n\nconst __ = y18n({\n  locale: 'pirate',\n  directory: './test/locales'\n}).__\n\nconsole.info(__`Hi, ${'Ben'} ${'Coe'}!`)\n```\n\nYou will need to run with `--allow-read` to load alternative locales.\n\n## JSON Language Files\n\nThe JSON language files should be stored in a `./locales` folder.\nFile names correspond to locales, e.g., `en.json`, `pirate.json`.\n\nWhen strings are observed for the first time they will be\nadded to the JSON file corresponding to the current locale.\n\n## Methods\n\n### require('y18n')(config)\n\nCreate an instance of y18n with the config provided, options include:\n\n* `directory`: the locale directory, default `./locales`.\n* `updateFiles`: should newly observed strings be updated in file, default `true`.\n* `locale`: what locale should be used.\n* `fallbackToLanguage`: should fallback to a language-only file (e.g. `en.json`)\n  be allowed if a file matching the locale does not exist (e.g. `en_US.json`),\n  default `true`.\n\n### y18n.\\_\\_(str, arg, arg, arg)\n\nPrint a localized string, `%s` will be replaced with `arg`s.\n\nThis function can also be used as a tag for a template literal. You can use it\nlike this: <code>__&#96;hello ${'world'}&#96;</code>. This will be equivalent to\n`__('hello %s', 'world')`.\n\n### y18n.\\_\\_n(singularString, pluralString, count, arg, arg, arg)\n\nPrint a localized string with appropriate pluralization. If `%d` is provided\nin the string, the `count` will replace this placeholder.\n\n### y18n.setLocale(str)\n\nSet the current locale being used.\n\n### y18n.getLocale()\n\nWhat locale is currently being used?\n\n### y18n.updateLocale(obj)\n\nUpdate the current locale with the key value pairs in `obj`.\n\n## Supported Node.js Versions\n\nLibraries in this ecosystem make a best effort to track\n[Node.js' release schedule](https://nodejs.org/en/about/releases/). Here's [a\npost on why we think this is important](https://medium.com/the-node-js-collection/maintainers-should-consider-following-node-js-release-schedule-ab08ed4de71a).\n\n## License\n\nISC\n\n[npm-url]: https://npmjs.org/package/y18n\n[npm-image]: https://img.shields.io/npm/v/y18n.svg\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: https://github.com/feross/standard\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yargs/y18n.git"
  },
  "scripts": {
    "build:cjs": "rollup -c",
    "check": "standardx **/*.ts **/*.cjs **/*.mjs",
    "compile": "tsc",
    "coverage": "c8 report --check-coverage",
    "fix": "standardx --fix **/*.ts **/*.cjs **/*.mjs",
    "postcompile": "npm run build:cjs",
    "posttest": "npm run check",
    "precompile": "rimraf build",
    "prepare": "npm run compile",
    "pretest": "rimraf build && tsc -p tsconfig.test.json && cross-env NODE_ENV=test npm run build:cjs",
    "test": "c8 --reporter=text --reporter=html mocha test/*.cjs",
    "test:esm": "c8 --reporter=text --reporter=html mocha test/esm/*.mjs"
  },
  "standardx": {
    "ignore": [
      "build"
    ]
  },
  "type": "module",
  "version": "5.0.8"
}
