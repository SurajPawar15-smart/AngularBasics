{
  "_args": [
    [
      {
        "raw": "@npmcli/installed-package-contents@^1.0.6",
        "scope": "@npmcli",
        "escapedName": "@npmcli%2finstalled-package-contents",
        "name": "@npmcli/installed-package-contents",
        "rawSpec": "^1.0.6",
        "spec": ">=1.0.6 <2.0.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\pacote"
    ]
  ],
  "_from": "@npmcli/installed-package-contents@^1.0.6",
  "_hasShrinkwrap": false,
  "_id": "@npmcli/installed-package-contents@1.0.7",
  "_location": "/@npmcli/installed-package-contents",
  "_nodeVersion": "15.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/installed-package-contents_1.0.7_1612814456414_0.41444940614953674"
  },
  "_npmUser": {
    "name": "ruyadorno",
    "email": "ruyadorno@hotmail.com"
  },
  "_npmVersion": "7.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@npmcli/installed-package-contents@^1.0.6",
    "scope": "@npmcli",
    "escapedName": "@npmcli%2finstalled-package-contents",
    "name": "@npmcli/installed-package-contents",
    "rawSpec": "^1.0.6",
    "spec": ">=1.0.6 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pacote"
  ],
  "_resolved": "https://registry.npmjs.org/@npmcli/installed-package-contents/-/installed-package-contents-1.0.7.tgz",
  "_shasum": "ab7408c6147911b970a8abe261ce512232a3f4fa",
  "_shrinkwrap": null,
  "_spec": "@npmcli/installed-package-contents@^1.0.6",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\pacote",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "https://izs.me"
  },
  "bin": {
    "installed-package-contents": "index.js"
  },
  "bugs": {
    "url": "https://github.com/npm/installed-package-contents/issues"
  },
  "dependencies": {
    "npm-bundled": "^1.1.1",
    "npm-normalize-package-bin": "^1.0.1"
  },
  "description": "Get the list of files installed in a package in node_modules, including bundled dependencies",
  "devDependencies": {
    "require-inject": "^1.4.4",
    "tap": "^14.11.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-9rufe0wnJusCQoLpV9ZPKIVP55itrM5BxOXs10DmdbRfgWtHy1LDyskbwRnBghuB0PrF7pNPOqREVtpz4HqzKw==",
    "shasum": "ab7408c6147911b970a8abe261ce512232a3f4fa",
    "tarball": "https://registry.npmjs.org/@npmcli/installed-package-contents/-/installed-package-contents-1.0.7.tgz",
    "fileCount": 4,
    "unpackedSize": 12688,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIZh4CRA9TVsSAnZWagAA+L0P/2r/eiWa3nmMgAjTmLbi\nZrP7WwJo3n/Gu7KtQW2bfkj0R1I+So87LvrpoXx2h0uUbhQDAsxJ/y1cm95X\nymaExtS1BgJWqsPhx3yVW7uoj0OhUc1oG+dqLIa1xBjKRhbs3ophzbbolaD1\nT0Ti6eWGiHDlchYRx3HUTWtR4psBEvirsAJZZisA5ruZH+a4GofBB+miizJn\nF64L+/HiqMY9FxK7Mf7Rtg6zzCQyrhTkeSWDdm+GjJDl8nnoC+SeFVv2yRfn\nqrIxlXsXicd/xrRvcO1i/YeqItwYw7CUaDbE5JAjaTQArsNOH4y2fmZmeqZ7\nRrndiAHN0pC3/cJEJ1qVYhXfBwFmUqKrz3/tewQjhf0CvuSOUg3UVj3xroV8\n1MzWKbVbTOFkCUbCx3YlDhkes8t2HY8vdnvmQkEh+tDYmIMhL8dKsMRjVl4b\nSSyVbGZkpyHA37+wz+PBZomLo6J6qQE6NLJxN3ka4Pkox45AZB6mUDpfGMvz\ng6UaecdMpNJbF8R1OLmhwDU2+BzmTtzwV2sDHCNmrmKPx84i2XEoSR7ynlB9\nkzENrGp8YWNrkesBbugnXLV5abGJj6dHgTvj/elXl6bjow7bUnI7oL7PGhbM\nGt4fVcj39rvQURIc54qVFoCPAdfufFvLPrLXnSI3WWUXR4HpB3qu6UW1wCaL\n/sYY\r\n=yUp5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "e79ffb760d93e0a969c768ccf419d0e9b72b6de8",
  "homepage": "https://github.com/npm/installed-package-contents#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "gar",
      "email": "gar+npm@danger.computer"
    },
    {
      "name": "isaacs",
      "email": "i@izs.me"
    },
    {
      "name": "darcyclarke",
      "email": "darcy@darcyclarke.me"
    },
    {
      "name": "ruyadorno",
      "email": "ruyadorno@hotmail.com"
    },
    {
      "name": "nlf",
      "email": "quitlahok@gmail.com"
    }
  ],
  "name": "@npmcli/installed-package-contents",
  "optionalDependencies": {},
  "readme": "# @npmcli/installed-package-contents\n\nGet the list of files installed in a package in node_modules, including\nbundled dependencies.\n\nThis is useful if you want to remove a package node from the tree _without_\nremoving its child nodes, for example to extract a new version of the\ndependency into place safely.\n\nIt's sort of the reflection of [npm-packlist](http://npm.im/npm-packlist),\nbut for listing out the _installed_ files rather than the files that _will_\nbe installed.  This is of course a much simpler operation, because we don't\nhave to handle ignore files or package.json `files` lists.\n\n## USAGE\n\n```js\n// programmatic usage\nconst pkgContents = require('@npmcli/installed-package-contents')\n\npkgContents({ path: 'node_modules/foo', depth: 1 }).then(files => {\n  // files is an array of items that need to be passed to\n  // rimraf or moved out of the way to make the folder empty\n  // if foo bundled dependencies, those will be included.\n  // It will not traverse into child directories, because we set\n  // depth:1 in the options.\n  // If the folder doesn't exist, this returns an empty array.\n})\n\npkgContents({ path: 'node_modules/foo', depth: Infinity }).then(files => {\n  // setting depth:Infinity tells it to keep walking forever\n  // until it hits something that isn't a directory, so we'll\n  // just get the list of all files, but not their containing\n  // directories.\n})\n```\n\nAs a CLI:\n\n```bash\n$ installed-package-contents node_modules/bundle-some -d1\nnode_modules/.bin/some\nnode_modules/bundle-some/package.json\nnode_modules/bundle-some/node_modules/@scope/baz\nnode_modules/bundle-some/node_modules/.bin/foo\nnode_modules/bundle-some/node_modules/foo\n```\n\nCLI options:\n\n```\nUsage:\n  installed-package-contents <path> [-d<n> --depth=<n>]\n\nLists the files installed for a package specified by <path>.\n\nOptions:\n  -d<n> --depth=<n>   Provide a numeric value (\"Infinity\" is allowed)\n                      to specify how deep in the file tree to traverse.\n                      Default=1\n  -h --help           Show this usage information\n```\n\n## OPTIONS\n\n* `depth` Number, default `1`.  How deep to traverse through folders to get\n    contents.  Typically you'd want to set this to either `1` (to get the\n    surface files and folders) or `Infinity` (to get all files), but any\n    other positive number is supported as well.  If set to `0` or a\n    negative number, returns the path provided and (if it is a package) its\n    set of linked bins.\n* `path` Required.  Path to the package in `node_modules` where traversal\n    should begin.\n\n## RETURN VALUE\n\nA Promise that resolves to an array of fully-resolved files and folders\nmatching the criteria.  This includes all bundled dependencies in\n`node_modules`, and any linked executables in `node_modules/.bin` that the\npackage caused to be installed.\n\nAn empty or missing package folder will return an empty array.  Empty\ndirectories _within_ package contents are listed, even if the `depth`\nargument would cause them to be traversed into.\n\n## CAVEAT\n\nIf using this module to generate a list of files that should be recursively\nremoved to clear away the package, note that this will leave empty\ndirectories behind in certain cases:\n\n- If all child packages are bundled dependencies, then the\n    `node_modules` folder will remain.\n- If all child packages within a given scope were bundled dependencies,\n    then the `node_modules/@scope` folder will remain.\n- If all linked bin scripts were removed, then an empty `node_modules/.bin`\n    folder will remain.\n\nIn the interest of speed and algorithmic complexity, this module does _not_\ndo a subsequent readdir to see if it would remove all directory entries,\nthough it would be easier to look at if it returned `node_modules` or\n`.bin` in that case rather than the contents.  However, if the intent is to\npass these arguments to `rimraf`, it hardly makes sense to do _two_\n`readdir` calls just so that we can have the luxury of having to make a\nthird.\n\nSince the primary use case is to delete a package's contents so that they\ncan be re-filled with a new version of that package, this caveat does not\npose a problem.  Empty directories are already ignored by both npm and git.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/installed-package-contents.git"
  },
  "scripts": {
    "postpublish": "git push origin --follow-tags",
    "postversion": "npm publish",
    "preversion": "npm test",
    "snap": "tap",
    "test": "tap"
  },
  "tap": {
    "check-coverage": true,
    "color": true
  },
  "version": "1.0.7"
}
