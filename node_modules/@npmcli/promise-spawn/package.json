{
  "_args": [
    [
      {
        "raw": "@npmcli/promise-spawn@^1.2.0",
        "scope": "@npmcli",
        "escapedName": "@npmcli%2fpromise-spawn",
        "name": "@npmcli/promise-spawn",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\pacote"
    ]
  ],
  "_from": "@npmcli/promise-spawn@^1.2.0",
  "_hasShrinkwrap": false,
  "_id": "@npmcli/promise-spawn@1.3.2",
  "_location": "/@npmcli/promise-spawn",
  "_nodeVersion": "14.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/promise-spawn_1.3.2_1604078763303_0.7092636532819514"
  },
  "_npmUser": {
    "name": "ruyadorno",
    "email": "ruyadorno@hotmail.com"
  },
  "_npmVersion": "7.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@npmcli/promise-spawn@^1.2.0",
    "scope": "@npmcli",
    "escapedName": "@npmcli%2fpromise-spawn",
    "name": "@npmcli/promise-spawn",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@npmcli/git",
    "/@npmcli/run-script",
    "/pacote"
  ],
  "_resolved": "https://registry.npmjs.org/@npmcli/promise-spawn/-/promise-spawn-1.3.2.tgz",
  "_shasum": "42d4e56a8e9274fba180dabc0aea6e38f29274f5",
  "_shrinkwrap": null,
  "_spec": "@npmcli/promise-spawn@^1.2.0",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\pacote",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "https://izs.me"
  },
  "bugs": {
    "url": "https://github.com/npm/promise-spawn/issues"
  },
  "dependencies": {
    "infer-owner": "^1.0.4"
  },
  "description": "spawn processes the way the npm cli likes to do",
  "devDependencies": {
    "minipass": "^3.1.1",
    "require-inject": "^1.4.4",
    "tap": "^14.10.6"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-QyAGYo/Fbj4MXeGdJcFzZ+FkDkomfRBrPM+9QYJSg+PxgAUL+LU3FneQk37rKR2/zjqkCV1BLHccX98wRXG3Sg==",
    "shasum": "42d4e56a8e9274fba180dabc0aea6e38f29274f5",
    "tarball": "https://registry.npmjs.org/@npmcli/promise-spawn/-/promise-spawn-1.3.2.tgz",
    "fileCount": 4,
    "unpackedSize": 6014,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnEyrCRA9TVsSAnZWagAAkqoP/3NSkbAM1a30k+m6bs+k\nW4c4gEMr5LMnSQPiIOkG9ZtQDkJxAMM/ilPVm59V5E8CvIcGXIKuMKRFIRTQ\nOKwWrUOhVEUXTL6koMJQnHwKO7tSktt6+ZRrhrX6CEjHnc+oiJbF1RhXEsv7\nZP/RSPiLjLGOnXfH4IhjNtOgupAHrhUcZ27BdQTs7PDzItPV2lGXyWOV/KEl\n54D3de8zLjBn7NTU7gWqoq4oIzO413jITMVDopW7gYtd6iYweKAWfUoaYIIG\n6yDSlSpjZKJM+lPO3cXOdGZuZ7Rf318HaxdGkXT7tbCcIaMUvauutLPQlGAc\nS5nQ0T+FdfsOAzZNH43sK1g2bx4OMld6RzzoF/faY6BEuFozO3XjgA8i8iuk\ngyYvmpRU5XvRE5hXFh20QelWdRLvfm64wzrUpk7DWPKPDmHIcELQcdfOyGnr\nqCR4x+wxvCx64bTphMt5ZrirPAHjdnNWH0soWJB2MkytO2QOzL09A/Evx4rq\nf3FEUB8PmFQfvGYWStHyIC2iVL6fIY8IxtACxOPCxQVmu2BFHjIt2Iel6GCJ\nN3QQpdm/bsmEJDEUeyZ1JMrlG89vtsVEAGl/wFxsZZveAidEIRpJpQDC63gA\nJvv26seOqYfTyjXHDVFc4ziaYj+ps6TJkMHBWwvhsClfX1dUIc9DuQUpzdoV\n6Khe\r\n=jbFk\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "3413f159a7e740568fb4fa65e0c84b155a469290",
  "homepage": "https://github.com/npm/promise-spawn#readme",
  "license": "ISC",
  "maintainers": [
    {
      "name": "nlf",
      "email": "quitlahok@gmail.com"
    },
    {
      "name": "ruyadorno",
      "email": "ruyadorno@hotmail.com"
    },
    {
      "name": "darcyclarke",
      "email": "darcy@darcyclarke.me"
    },
    {
      "name": "isaacs",
      "email": "i@izs.me"
    }
  ],
  "name": "@npmcli/promise-spawn",
  "optionalDependencies": {},
  "readme": "# @npmcli/promise-spawn\n\nSpawn processes the way the npm cli likes to do.  Give it some options,\nit'll give you a Promise that resolves or rejects based on the results of\nthe execution.\n\nNote: When the current user is root, this will use\n[`infer-owner`](http://npm.im/infer-owner) to find the owner of the current\nworking directory, and run with that effective uid/gid.  Otherwise, it runs\nas the current user always.  (This helps prevent doing git checkouts and\nsuch, and leaving root-owned files lying around in user-owned locations.)\n\n## USAGE\n\n```js\nconst promiseSpawn = require('@npmcli/promise-spawn')\n\npromiseSpawn('ls', [ '-laF', 'some/dir/*.js' ], {\n  cwd: '/tmp/some/path', // defaults to process.cwd()\n  stdioString: false, // stdout/stderr as strings rather than buffers\n  stdio: 'pipe', // any node spawn stdio arg is valid here\n  // any other arguments to node child_process.spawn can go here as well,\n  // but uid/gid will be ignored and set by infer-owner if relevant.\n}, {\n  extra: 'things',\n  to: 'decorate',\n  the: 'result',\n}).then(result => {\n  // {code === 0, signal === null, stdout, stderr, and all the extras}\n  console.log('ok!', result)\n}).catch(er => {\n  // er has all the same properties as the result, set appropriately\n  console.error('failed!', er)\n})\n```\n\n## API\n\n### `promiseSpawn(cmd, args, opts, extra)` -> `Promise`\n\nRun the command, return a Promise that resolves/rejects based on the\nprocess result.\n\nResult or error will be decorated with the properties in the `extra`\nobject.  You can use this to attach some helpful info about _why_ the\ncommand is being run, if it makes sense for your use case.\n\nIf `stdio` is set to anything other than `'inherit'`, then the result/error\nwill be decorated with `stdout` and `stderr` values.  If `stdioString` is\nset to `true`, these will be strings.  Otherwise they will be Buffer\nobjects.\n\nReturned promise is decorated with the `stdin` stream if the process is set\nto pipe from `stdin`.  Writing to this stream writes to the `stdin` of the\nspawned process.\n\n#### Options\n\n- `stdioString` Boolean, default `false`.  Return stdout/stderr output as\n  strings rather than buffers.\n- `cwd` String, default `process.cwd()`.  Current working directory for\n  running the script.  Also the argument to `infer-owner` to determine\n  effective uid/gid when run as root on Unix systems.\n- Any other options for `child_process.spawn` can be passed as well, but\n  note that `uid` and `gid` will be overridden by the owner of the cwd when\n  run as root on Unix systems, or `null` otherwise.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/promise-spawn.git"
  },
  "scripts": {
    "postversion": "npm publish",
    "prepublishOnly": "git push origin --follow-tags",
    "preversion": "npm test",
    "snap": "tap",
    "test": "tap"
  },
  "tap": {
    "check-coverage": true
  },
  "version": "1.3.2"
}
