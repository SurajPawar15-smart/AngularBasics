{
  "_args": [
    [
      {
        "raw": "engine.io-parser@~4.0.0",
        "scope": null,
        "escapedName": "engine.io-parser",
        "name": "engine.io-parser",
        "rawSpec": "~4.0.0",
        "spec": ">=4.0.0 <4.1.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\engine.io"
    ]
  ],
  "_from": "engine.io-parser@~4.0.0",
  "_hasShrinkwrap": false,
  "_id": "engine.io-parser@4.0.2",
  "_location": "/engine.io-parser",
  "_nodeVersion": "12.19.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/engine.io-parser_4.0.2_1607332458539_0.7502439771648328"
  },
  "_npmUser": {
    "name": "darrachequesne",
    "email": "damien.arrachequesne@gmail.com"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "engine.io-parser@~4.0.0",
    "scope": null,
    "escapedName": "engine.io-parser",
    "name": "engine.io-parser",
    "rawSpec": "~4.0.0",
    "spec": ">=4.0.0 <4.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/engine.io"
  ],
  "_resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-4.0.2.tgz",
  "_shasum": "e41d0b3fb66f7bf4a3671d2038a154024edb501e",
  "_shrinkwrap": null,
  "_spec": "engine.io-parser@~4.0.0",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\engine.io",
  "browser": {
    "./lib/encodePacket.js": "./lib/encodePacket.browser.js",
    "./lib/decodePacket.js": "./lib/decodePacket.browser.js"
  },
  "bugs": {
    "url": "https://github.com/socketio/engine.io-parser/issues"
  },
  "dependencies": {
    "base64-arraybuffer": "0.1.4"
  },
  "description": "Parser for the client for the realtime Engine",
  "devDependencies": {
    "@babel/core": "~7.9.6",
    "@babel/preset-env": "~7.9.6",
    "babel-eslint": "^10.0.3",
    "babelify": "^10.0.0",
    "benchmark": "^2.1.4",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "expect.js": "0.3.1",
    "mocha": "^5.2.0",
    "nyc": "~15.0.1",
    "prettier": "^1.19.1",
    "socket.io-browsers": "^1.0.4",
    "zuul": "3.11.1",
    "zuul-ngrok": "4.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-sHfEQv6nmtJrq6TKuIz5kyEKH/qSdK56H/A+7DnAuUPWosnIZAS2NHNcPLmyjtY3cGS/MqJdZbUjW97JU72iYg==",
    "shasum": "e41d0b3fb66f7bf4a3671d2038a154024edb501e",
    "tarball": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-4.0.2.tgz",
    "fileCount": 10,
    "unpackedSize": 17470,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfzfJrCRA9TVsSAnZWagAATLYP+wXbbhrCw8HCJ8LMrS5g\niNbwYLLCwunuovK4/fQ+xe4pa9E4oXrsII1WNJz/QqgRbFqU1x4Q3XZFWstW\ngrFQotnaI09SOOWUMdRHuhvCd50nTn418/zL4qCJhpptV/imx2UbMivz2ryi\n0BCy72J9N4yK7KBILI+B3ulj76Y5CpHEsp2cDyU2od5+GrmqPSVtG/Jpy4Bn\ndUE4AaeWUC4tTS3TXi5XZ3CC3Z+mCbggw4+5c5qcd6DSDxaEuJ/QApgfn66Q\naEanlcYLRu0qcnzmLeYIouSPo2jl9Bmt69FphCV+iwXu8HLv3vZYDLl1s8A1\n9XHl9Y+0n7H+MRzbixrCGcdsfI4OcbFRU8RLxBwZBZr+Wmpmt72iK3UrKtxA\nqVTv0k5Sh/aucNBrDOzl2hn1/skEIvUfr5v0hS1B+45IVjithe42Bf0RV4U7\ndAE8uihBUarlxAEdNH20NREDV/psB1P9xlrzatJZN0qWLa2O800eNbBDKpER\nbn0yCQ1p3Q2Zp2gscE1pE9B4U2dC9t8afFCwr/bCK0ABV4wV+E34G7qsnyiz\n2LfbDNdP0HO6jhwRbrIGXQDkEr+0fklWMg4vml0QaMJWuq8WBg/SHVmAYoK+\nNyPImv/RzJd8gm4DxH78RiGhWDN8T7SGiK1mZxUSt05a0op8vMBGTM42nqmx\n/Vzt\r\n=Oglm\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "lib/"
  ],
  "gitHead": "88799daa2207dd9a9dd2868eedbc7bc82d76cc90",
  "homepage": "https://github.com/socketio/engine.io-parser",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "rauchg",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "darrachequesne",
      "email": "damien.arrachequesne@gmail.com"
    }
  ],
  "name": "engine.io-parser",
  "optionalDependencies": {},
  "readme": "\n# engine.io-parser\n\n[![Build Status](https://github.com/socketio/engine.io-parser/workflows/CI/badge.svg)](https://github.com/socketio/engine.io-parser/actions)\n[![NPM version](https://badge.fury.io/js/engine.io-parser.svg)](https://npmjs.com/package/engine.io-parser)\n\nThis is the JavaScript parser for the engine.io protocol encoding,\nshared by both\n[engine.io-client](https://github.com/socketio/engine.io-client) and\n[engine.io](https://github.com/socketio/engine.io).\n\n## How to use\n\n### Standalone\n\nThe parser can encode/decode packets, payloads, and payloads as binary\nwith the following methods: `encodePacket`, `decodePacket`, `encodePayload`,\n`decodePayload`.\n\nExample:\n\n```js\nconst parser = require(\"engine.io-parser\");\nconst data = Buffer.from([ 1, 2, 3, 4 ]);\n\nparser.encodePacket({ type: \"message\", data }, encoded => {\n  const decodedData = parser.decodePacket(encoded); // decodedData === data\n});\n```\n\n### With browserify\n\nEngine.IO Parser is a commonjs module, which means you can include it by using\n`require` on the browser and package using [browserify](http://browserify.org/):\n\n1. install the parser package\n\n    ```shell\n    npm install engine.io-parser\n    ```\n\n1. write your app code\n\n    ```js\n    const parser = require(\"engine.io-parser\");\n\n    const testBuffer = new Int8Array(10);\n    for (let i = 0; i < testBuffer.length; i++) testBuffer[i] = i;\n\n    const packets = [{ type: \"message\", data: testBuffer.buffer }, { type: \"message\", data: \"hello\" }];\n\n    parser.encodePayload(packets, encoded => {\n      parser.decodePayload(encoded,\n        (packet, index, total) => {\n          const isLast = index + 1 == total;\n          if (!isLast) {\n            const buffer = new Int8Array(packet.data); // testBuffer\n          } else {\n            const message = packet.data; // \"hello\"\n          }\n        });\n    });\n    ```\n\n1. build your app bundle\n\n    ```bash\n    $ browserify app.js > bundle.js\n    ```\n\n1. include on your page\n\n    ```html\n    <script src=\"/path/to/bundle.js\"></script>\n    ```\n\n## Features\n\n- Runs on browser and node.js seamlessly\n- Runs inside HTML5 WebWorker\n- Can encode and decode packets\n  - Encodes from/to ArrayBuffer or Blob when in browser, and Buffer or ArrayBuffer in Node\n\n## API\n\nNote: `cb(type)` means the type is a callback function that contains a parameter of type `type` when called.\n\n### Node\n\n- `encodePacket`\n    - Encodes a packet.\n    - **Parameters**\n      - `Object`: the packet to encode, has `type` and `data`.\n        - `data`: can be a `String`, `Number`, `Buffer`, `ArrayBuffer`\n      - `Boolean`: binary support\n      - `Function`: callback, returns the encoded packet (`cb(String)`)\n- `decodePacket`\n    - Decodes a packet. Data also available as an ArrayBuffer if requested.\n    - Returns data as `String` or (`Blob` on browser, `ArrayBuffer` on Node)\n    - **Parameters**\n      - `String` | `ArrayBuffer`: the packet to decode, has `type` and `data`\n      - `String`: optional, the binary type\n\n- `encodePayload`\n    - Encodes multiple messages (payload).\n    - If any contents are binary, they will be encoded as base64 strings. Base64\n      encoded strings are marked with a b before the length specifier\n    - **Parameters**\n      - `Array`: an array of packets\n      - `Function`: callback, returns the encoded payload (`cb(String)`)\n- `decodePayload`\n    - Decodes data when a payload is maybe expected. Possible binary contents are\n      decoded from their base64 representation.\n    - **Parameters**\n      - `String`: the payload\n      - `Function`: callback, returns (cb(`Object`: packet, `Number`:packet index, `Number`:packet total))\n\n## Tests\n\nStandalone tests can be run with `npm test` which will run the node.js tests.\n\nBrowser tests are run using [zuul](https://github.com/defunctzombie/zuul).\n(You must have zuul setup with a saucelabs account.)\n\nYou can run the tests locally using the following command:\n\n```\nnpm run test:browser\n```\n\n## Support\n\nThe support channels for `engine.io-parser` are the same as `socket.io`:\n  - irc.freenode.net **#socket.io**\n  - [Github Discussions](https://github.com/socketio/socket.io/discussions)\n  - [Website](https://socket.io)\n\n## Development\n\nTo contribute patches, run tests or benchmarks, make sure to clone the\nrepository:\n\n```bash\ngit clone git://github.com/socketio/engine.io-parser.git\n```\n\nThen:\n\n```bash\ncd engine.io-parser\nnpm ci\n```\n\nSee the `Tests` section above for how to run tests before submitting any patches.\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/socketio/engine.io-parser.git"
  },
  "scripts": {
    "format:check": "prettier --check 'lib/**/*.js' 'test/**/*.js'",
    "format:fix": "prettier --write 'lib/**/*.js' 'test/**/*.js'",
    "lint": "eslint 'lib/**/*.js' 'test/**/*.js'",
    "test": "npm run lint && npm run format:check && if test \"$BROWSERS\" = \"1\" ; then npm run test:browser; else npm run test:node; fi",
    "test:browser": "zuul test/index.js --no-coverage",
    "test:node": "nyc mocha test/index.js"
  },
  "version": "4.0.2"
}
