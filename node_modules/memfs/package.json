{
  "_args": [
    [
      {
        "raw": "memfs@^3.2.0",
        "scope": null,
        "escapedName": "memfs",
        "name": "memfs",
        "rawSpec": "^3.2.0",
        "spec": ">=3.2.0 <4.0.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\webpack-dev-middleware"
    ]
  ],
  "_from": "memfs@^3.2.0",
  "_hasShrinkwrap": false,
  "_id": "memfs@3.2.2",
  "_location": "/memfs",
  "_nodeVersion": "12.22.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/memfs_3.2.2_1617599480187_0.7485029797762652"
  },
  "_npmUser": {
    "name": "streamich",
    "email": "vadimsdaleckis@gmail.com"
  },
  "_npmVersion": "7.7.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "memfs@^3.2.0",
    "scope": null,
    "escapedName": "memfs",
    "name": "memfs",
    "rawSpec": "^3.2.0",
    "spec": ">=3.2.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-dev-middleware"
  ],
  "_resolved": "https://registry.npmjs.org/memfs/-/memfs-3.2.2.tgz",
  "_shasum": "5de461389d596e3f23d48bb7c2afb6161f4df40e",
  "_shrinkwrap": null,
  "_spec": "memfs@^3.2.0",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\webpack-dev-middleware",
  "bugs": {
    "url": "https://github.com/streamich/memfs/issues"
  },
  "config": {
    "commitizen": {
      "path": "git-cz"
    }
  },
  "dependencies": {
    "fs-monkey": "1.0.3"
  },
  "description": "In-memory file-system with Node's fs API.",
  "devDependencies": {
    "@semantic-release/changelog": "5.0.1",
    "@semantic-release/git": "9.0.0",
    "@semantic-release/npm": "7.1.0",
    "@types/jest": "26.0.22",
    "@types/node": "10.17.56",
    "cpy-cli": "3.1.1",
    "husky": "6.0.0",
    "jest": "26.6.3",
    "prettier": "2.2.1",
    "pretty-quick": "3.1.0",
    "rimraf": "3.0.2",
    "semantic-release": "17.4.2",
    "ts-jest": "26.5.4",
    "ts-node": "9.1.1",
    "tslint": "5.20.1",
    "tslint-config-common": "1.6.0",
    "typescript": "4.2.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RE0CwmIM3CEvpcdK3rZ19BC4E6hv9kADkMN5rPduRak58cNArWLi/9jFLsa4rhsjfVxMP3v0jO7FHXq7SvFY5Q==",
    "shasum": "5de461389d596e3f23d48bb7c2afb6161f4df40e",
    "tarball": "https://registry.npmjs.org/memfs/-/memfs-3.2.2.tgz",
    "fileCount": 33,
    "unpackedSize": 188203,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgapv4CRA9TVsSAnZWagAAqfgP/2UciTig/46eD6kyQWLh\nQMHpJM0SJ/YB17Qgshz809iuJuZ/KMJv2B07w9AWR98gbrZsJLzVHeVsmJVn\nC9flmR8+BlRy6OmkELcD94HFHHUG7//JEDEE+X3v2ZfwpKR8hh3hLV10p9FE\nZDyKr/4Q0KDa023kiS0GSttI+R5Uyl1gEQIA6YjtbaCcfnHkadNW3hi2C4FP\nSGNBSlxhls2rp/fkE1AQlloQTJB45AVCSBEJ0ISUGtNckz430nkFV+Cjs0AD\nvfrcGXzH4CYBbLTfQxxyimJ//8xwtZH9mYO4ojZP22ucxuDRY8G555mgHhnG\n3jS9+xuisheW9UR+2Peq+xG6xgZ8VzrzrH5398z8/r/M43bdOnkMK/9bnIbQ\nCOM8AELrK0IV2Nmv0ppjKQc4F16uBMz2v9HNbDJ957/UkvoHB3vanPTlMJpa\n9/Szk8NsdEXaKgf8Vu0hxP8Rhnq6aPipd0SgpJmzcPrJ4Qh9RqMbv6thNU6c\ndLWXBhOrQxfiHLq7v7UVcz5tuxLhJSodXjq6w76sg9+veEJU/3VYlUfuVFjJ\nr86FDDk0d9S04L8IBdo43LWLD/2Ki29smKXOmgd1pDdm8Zx3stNEJwNFI96r\nYTfLVavPyfVMKuUi+oLC6DiNeSCLk3mgHQryyG0y65mR1KxqJEryvNoPdnhm\nmnJP\r\n=kZMH\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 4.0.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "2f034a18087b14f775ef35ad1ee1662d298c4a56",
  "homepage": "https://github.com/streamich/memfs#readme",
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": ".*/__tests__/.*\\.(test|spec)\\.(jsx?|tsx?)$"
  },
  "keywords": [
    "fs",
    "filesystem",
    "fs.js",
    "memory-fs",
    "memfs",
    "file",
    "file system",
    "mount",
    "memory",
    "in-memory",
    "virtual",
    "test",
    "testing",
    "mock"
  ],
  "license": "Unlicense",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "streamich",
      "email": "vadimsdaleckis@gmail.com"
    }
  ],
  "name": "memfs",
  "optionalDependencies": {},
  "readme": "# memfs\n\n[![][chat-badge]][chat] [![][npm-badge]][npm-url] [![][travis-badge]][travis-url]\n\nIn-memory file-system with [Node's `fs` API](https://nodejs.org/api/fs.html).\n\n- Node's `fs` API implemented, see [_API Status_](./docs/api-status.md)\n- Stores files in memory, in `Buffer`s\n- Throws sameish\\* errors as Node.js\n- Has concept of _i-nodes_\n- Implements _hard links_\n- Implements _soft links_ (aka symlinks, symbolic links)\n- Permissions may\\* be implemented in the future\n- Can be used in browser, see [`memfs-webpack`](https://github.com/streamich/memfs-webpack)\n\n### Install\n\n```shell\nnpm install --save memfs\n```\n\n## Usage\n\n```js\nimport { fs } from 'memfs';\n\nfs.writeFileSync('/hello.txt', 'World!');\nfs.readFileSync('/hello.txt', 'utf8'); // World!\n```\n\nCreate a file system from a plain JSON:\n\n```js\nimport { fs, vol } from 'memfs';\n\nconst json = {\n  './README.md': '1',\n  './src/index.js': '2',\n  './node_modules/debug/index.js': '3',\n};\nvol.fromJSON(json, '/app');\n\nfs.readFileSync('/app/README.md', 'utf8'); // 1\nvol.readFileSync('/app/src/index.js', 'utf8'); // 2\n```\n\nExport to JSON:\n\n```js\nvol.writeFileSync('/script.sh', 'sudo rm -rf *');\nvol.toJSON(); // {\"/script.sh\": \"sudo rm -rf *\"}\n```\n\nUse it for testing:\n\n```js\nvol.writeFileSync('/foo', 'bar');\nexpect(vol.toJSON()).toEqual({ '/foo': 'bar' });\n```\n\nCreate as many filesystem volumes as you need:\n\n```js\nimport { Volume } from 'memfs';\n\nconst vol = Volume.fromJSON({ '/foo': 'bar' });\nvol.readFileSync('/foo'); // bar\n\nconst vol2 = Volume.fromJSON({ '/foo': 'bar 2' });\nvol2.readFileSync('/foo'); // bar 2\n```\n\nUse `memfs` together with [`unionfs`][unionfs] to create one filesystem\nfrom your in-memory volumes and the real disk filesystem:\n\n```js\nimport * as fs from 'fs';\nimport { ufs } from 'unionfs';\n\nufs.use(fs).use(vol);\n\nufs.readFileSync('/foo'); // bar\n```\n\nUse [`fs-monkey`][fs-monkey] to monkey-patch Node's `require` function:\n\n```js\nimport { patchRequire } from 'fs-monkey';\n\nvol.writeFileSync('/index.js', 'console.log(\"hi world\")');\npatchRequire(vol);\nrequire('/index'); // hi world\n```\n\n## Docs\n\n- [Reference](./docs/reference.md)\n- [Relative paths](./docs/relative-paths.md)\n- [API status](./docs/api-status.md)\n- [Dependencies](./docs/dependencies.md)\n\n## See also\n\n- [`spyfs`][spyfs] - spies on filesystem actions\n- [`unionfs`][unionfs] - creates a union of multiple filesystem volumes\n- [`linkfs`][linkfs] - redirects filesystem paths\n- [`fs-monkey`][fs-monkey] - monkey-patches Node's `fs` module and `require` function\n- [`libfs`](https://github.com/streamich/full-js/blob/master/src/lib/fs.ts) - real filesystem (that executes UNIX system calls) implemented in JavaScript\n\n[chat]: https://onp4.com/@vadim/~memfs\n[chat-badge]: https://img.shields.io/badge/Chat-%F0%9F%92%AC-green?style=flat&logo=chat&link=https://onp4.com/@vadim/~memfs\n[npm-url]: https://www.npmjs.com/package/memfs\n[npm-badge]: https://img.shields.io/npm/v/memfs.svg\n[travis-url]: https://travis-ci.org/streamich/memfs\n[travis-badge]: https://travis-ci.org/streamich/memfs.svg?branch=master\n[memfs]: https://github.com/streamich/memfs\n[unionfs]: https://github.com/streamich/unionfs\n[linkfs]: https://github.com/streamich/linkfs\n[spyfs]: https://github.com/streamich/spyfs\n[fs-monkey]: https://github.com/streamich/fs-monkey\n\n## License\n\n[Unlicense](./LICENSE) - public domain.\n",
  "readmeFilename": "README.md",
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git"
    ],
    "prepare": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/streamich/memfs.git"
  },
  "scripts": {
    "build": "tsc -p . && cpy src/*.js lib",
    "clean": "rimraf lib types",
    "prettier": "prettier --ignore-path .gitignore --write \"src/**/*.{ts,js}\"",
    "prettier:diff": "prettier -l \"src/**/*.{ts,js}\"",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "tslint": "tslint \"src/**/*.ts\" -t verbose",
    "watch": "watch \"npm run build\" ./src"
  },
  "types": "lib/index.d.ts",
  "version": "3.2.2"
}
