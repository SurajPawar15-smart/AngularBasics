{
  "_args": [
    [
      {
        "raw": "yargs@^16.2.0",
        "scope": null,
        "escapedName": "yargs",
        "name": "yargs",
        "rawSpec": "^16.2.0",
        "spec": ">=16.2.0 <17.0.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager\\node_modules\\@angular\\compiler-cli"
    ]
  ],
  "_from": "yargs@^16.2.0",
  "_hasShrinkwrap": false,
  "_id": "yargs@16.2.0",
  "_location": "/@angular/compiler-cli/yargs",
  "_nodeVersion": "14.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/yargs_16.2.0_1607209795325_0.37348298625324783"
  },
  "_npmUser": {
    "name": "oss-bot",
    "email": "bencoe+oss-bot@gmail.com"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "yargs@^16.2.0",
    "scope": null,
    "escapedName": "yargs",
    "name": "yargs",
    "rawSpec": "^16.2.0",
    "spec": ">=16.2.0 <17.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular/compiler-cli"
  ],
  "_resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
  "_shasum": "1c82bf0f6b6a66eafce7ef30e376f49a12477f66",
  "_shrinkwrap": null,
  "_spec": "yargs@^16.2.0",
  "_where": "c:\\Angular\\TaskManager\\node_modules\\@angular\\compiler-cli",
  "bugs": {
    "url": "https://github.com/yargs/yargs/issues"
  },
  "contributors": [
    {
      "name": "Yargs Contributors",
      "url": "https://github.com/yargs/yargs/graphs/contributors"
    }
  ],
  "dependencies": {
    "cliui": "^7.0.2",
    "escalade": "^3.1.1",
    "get-caller-file": "^2.0.5",
    "require-directory": "^2.1.1",
    "string-width": "^4.2.0",
    "y18n": "^5.0.5",
    "yargs-parser": "^20.2.2"
  },
  "description": "yargs the modern, pirate-themed, successor to optimist.",
  "devDependencies": {
    "@types/chai": "^4.2.11",
    "@types/mocha": "^8.0.0",
    "@types/node": "^14.11.2",
    "@wessberg/rollup-plugin-ts": "^1.3.2",
    "c8": "^7.0.0",
    "chai": "^4.2.0",
    "chalk": "^4.0.0",
    "coveralls": "^3.0.9",
    "cpr": "^3.0.1",
    "cross-env": "^7.0.2",
    "cross-spawn": "^7.0.0",
    "gts": "^3.0.0",
    "hashish": "0.0.4",
    "mocha": "^8.0.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.23.0",
    "rollup-plugin-cleanup": "^3.1.1",
    "standardx": "^5.0.0",
    "typescript": "^4.0.2",
    "which": "^2.0.0",
    "yargs-test-extends": "^1.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
    "shasum": "1c82bf0f6b6a66eafce7ef30e376f49a12477f66",
    "tarball": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
    "fileCount": 57,
    "unpackedSize": 286271,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfzBNDCRA9TVsSAnZWagAA998P/32/tiEKatO5ga84Yqp2\nOpx1zOZBgwP8uFmLmMmSxfIhJsN9cQI8lg9aPjcJ2tvufRcmwAXZQaF/m2HK\ny/DLfSOWax0mCDIdWqSHb2FxSCxB4xVP61rTY5tLI4tmrnhVpAyy3Yq00qc8\nBLzwIh3A1WxLZPxSgkPWw9tGKFaWKp40Y5SAI9HwDYtZXy+u2N8zuEpTIZSM\neHymaHny0YLOMESbD+m/4RlXdlw1ZHs6j93xx2fWk0XszOSr2mFHLhgnftmN\nYglEpfA3hrfyXIDmmDFspFogp4ZgD6bjf3tEffV5Pyhg2edmoS5Tf4NbP/Bt\n4NTyLK78eW62yJ3/U/Mq+aKJZwhUetjIxNsmAm1mn/WjvHffNkANSiFoKloY\nl6e07WGba+lksmUGQSM7RVBdXOhDOtTKrmjeUymnoewEfb6LfX/P0vSGxLdi\njrE+ar+9zXl+oRBun1Ah+aZQPYf1dOI5jyn5s/zK4JLieMX/txzTUFfaf3JI\nTwzy9rg1fwN3fg3q9UVpc7cvo+SSbw1s2uxLmY0R0vWrmuHL0tDLThXmRnU4\naX5JAFvXmGn+SSVaaW0b4EeudQHauQoKAyqahzz773ImQxlHM0pnoaxXO5uU\nfcjIjcBuEqxlmLMRJKcV28HGvR7oWixsNyzbZcc9SqZnnUOYUC3kHoTSCA8C\nKGzh\r\n=KryK\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": [
      {
        "import": "./index.mjs",
        "require": "./index.cjs"
      },
      "./index.cjs"
    ],
    "./helpers": {
      "import": "./helpers/helpers.mjs",
      "require": "./helpers/index.js"
    },
    "./yargs": [
      {
        "require": "./yargs"
      },
      "./yargs"
    ]
  },
  "files": [
    "browser.mjs",
    "index.cjs",
    "helpers/*.js",
    "helpers/*",
    "index.mjs",
    "yargs",
    "build",
    "locales",
    "LICENSE",
    "lib/platform-shims/*.mjs",
    "!*.d.ts"
  ],
  "gitHead": "57f0a0494b2b62639966014797562dca47cd1b27",
  "homepage": "https://yargs.js.org/",
  "keywords": [
    "argument",
    "args",
    "option",
    "parser",
    "parsing",
    "cli",
    "command"
  ],
  "license": "MIT",
  "main": "./index.cjs",
  "maintainers": [
    {
      "name": "bcoe",
      "email": "bencoe@gmail.com"
    },
    {
      "name": "oss-bot",
      "email": "bencoe+oss-bot@gmail.com"
    }
  ],
  "module": "./index.mjs",
  "name": "yargs",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <img width=\"250\" src=\"https://raw.githubusercontent.com/yargs/yargs/master/yargs-logo.png\">\n</p>\n<h1 align=\"center\"> Yargs </h1>\n<p align=\"center\">\n  <b >Yargs be a node.js library fer hearties tryin' ter parse optstrings</b>\n</p>\n\n<br>\n\n![ci](https://github.com/yargs/yargs/workflows/ci/badge.svg)\n[![NPM version][npm-image]][npm-url]\n[![js-standard-style][standard-image]][standard-url]\n[![Coverage][coverage-image]][coverage-url]\n[![Conventional Commits][conventional-commits-image]][conventional-commits-url]\n[![Slack][slack-image]][slack-url]\n\n## Description\nYargs helps you build interactive command line tools, by parsing arguments and generating an elegant user interface.\n\nIt gives you:\n\n* commands and (grouped) options (`my-program.js serve --port=5000`).\n* a dynamically generated help menu based on your arguments:\n\n```\nmocha [spec..]\n\nRun tests with Mocha\n\nCommands\n  mocha inspect [spec..]  Run tests with Mocha                         [default]\n  mocha init <path>       create a client-side Mocha setup at <path>\n\nRules & Behavior\n  --allow-uncaught           Allow uncaught errors to propagate        [boolean]\n  --async-only, -A           Require all tests to use a callback (async) or\n                             return a Promise                          [boolean]\n```\n\n* bash-completion shortcuts for commands and options.\n* and [tons more](/docs/api.md).\n\n## Installation\n\nStable version:\n```bash\nnpm i yargs\n```\n\nBleeding edge version with the most recent features:\n```bash\nnpm i yargs@next\n```\n\n## Usage\n\n### Simple Example\n\n```javascript\n#!/usr/bin/env node\nconst yargs = require('yargs/yargs')\nconst { hideBin } = require('yargs/helpers')\nconst argv = yargs(hideBin(process.argv)).argv\n\nif (argv.ships > 3 && argv.distance < 53.5) {\n  console.log('Plunder more riffiwobbles!')\n} else {\n  console.log('Retreat from the xupptumblers!')\n}\n```\n\n```bash\n$ ./plunder.js --ships=4 --distance=22\nPlunder more riffiwobbles!\n\n$ ./plunder.js --ships 12 --distance 98.7\nRetreat from the xupptumblers!\n```\n\n### Complex Example\n\n```javascript\n#!/usr/bin/env node\nconst yargs = require('yargs/yargs')\nconst { hideBin } = require('yargs/helpers')\n\nyargs(hideBin(process.argv))\n  .command('serve [port]', 'start the server', (yargs) => {\n    yargs\n      .positional('port', {\n        describe: 'port to bind on',\n        default: 5000\n      })\n  }, (argv) => {\n    if (argv.verbose) console.info(`start server on :${argv.port}`)\n    serve(argv.port)\n  })\n  .option('verbose', {\n    alias: 'v',\n    type: 'boolean',\n    description: 'Run with verbose logging'\n  })\n  .argv\n```\n\nRun the example above with `--help` to see the help for the application.\n\n## Supported Platforms\n\n### TypeScript\n\nyargs has type definitions at [@types/yargs][type-definitions].\n\n```\nnpm i @types/yargs --save-dev\n```\n\nSee usage examples in [docs](/docs/typescript.md).\n\n### Deno\n\nAs of `v16`, `yargs` supports [Deno](https://github.com/denoland/deno):\n\n```typescript\nimport yargs from 'https://deno.land/x/yargs/deno.ts'\nimport { Arguments } from 'https://deno.land/x/yargs/deno-types.ts'\n\nyargs(Deno.args)\n  .command('download <files...>', 'download a list of files', (yargs: any) => {\n    return yargs.positional('files', {\n      describe: 'a list of files to do something with'\n    })\n  }, (argv: Arguments) => {\n    console.info(argv)\n  })\n  .strictCommands()\n  .demandCommand(1)\n  .argv\n```\n\n### ESM\n\nAs of `v16`,`yargs` supports ESM imports:\n\n```js\nimport yargs from 'yargs'\nimport { hideBin } from 'yargs/helpers'\n\nyargs(hideBin(process.argv))\n  .command('curl <url>', 'fetch the contents of the URL', () => {}, (argv) => {\n    console.info(argv)\n  })\n  .demandCommand(1)\n  .argv\n```\n\n### Usage in Browser\n\nSee examples of using yargs in the browser in [docs](/docs/browser.md).\n\n## Community\n\nHaving problems? want to contribute? join our [community slack](http://devtoolscommunity.herokuapp.com).\n\n## Documentation\n\n### Table of Contents\n\n* [Yargs' API](/docs/api.md)\n* [Examples](/docs/examples.md)\n* [Parsing Tricks](/docs/tricks.md)\n  * [Stop the Parser](/docs/tricks.md#stop)\n  * [Negating Boolean Arguments](/docs/tricks.md#negate)\n  * [Numbers](/docs/tricks.md#numbers)\n  * [Arrays](/docs/tricks.md#arrays)\n  * [Objects](/docs/tricks.md#objects)\n  * [Quotes](/docs/tricks.md#quotes)\n* [Advanced Topics](/docs/advanced.md)\n  * [Composing Your App Using Commands](/docs/advanced.md#commands)\n  * [Building Configurable CLI Apps](/docs/advanced.md#configuration)\n  * [Customizing Yargs' Parser](/docs/advanced.md#customizing)\n  * [Bundling yargs](/docs/bundling.md)\n* [Contributing](/contributing.md)\n\n## Supported Node.js Versions\n\nLibraries in this ecosystem make a best effort to track\n[Node.js' release schedule](https://nodejs.org/en/about/releases/). Here's [a\npost on why we think this is important](https://medium.com/the-node-js-collection/maintainers-should-consider-following-node-js-release-schedule-ab08ed4de71a).\n\n[npm-url]: https://www.npmjs.com/package/yargs\n[npm-image]: https://img.shields.io/npm/v/yargs.svg\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: http://standardjs.com/\n[conventional-commits-image]: https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\n[conventional-commits-url]: https://conventionalcommits.org/\n[slack-image]: http://devtoolscommunity.herokuapp.com/badge.svg\n[slack-url]: http://devtoolscommunity.herokuapp.com\n[type-definitions]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/yargs\n[coverage-image]: https://img.shields.io/nycrc/yargs/yargs\n[coverage-url]: https://github.com/yargs/yargs/blob/master/.nycrc\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yargs/yargs.git"
  },
  "scripts": {
    "build:cjs": "rollup -c rollup.config.cjs",
    "check": "gts lint && npm run check:js",
    "check:js": "standardx '**/*.mjs' && standardx '**/*.cjs' && standardx './*.mjs' && standardx './*.cjs'",
    "clean": "gts clean",
    "compile": "rimraf build && tsc",
    "coverage": "c8 report --check-coverage",
    "fix": "gts fix && npm run fix:js",
    "fix:js": "standardx --fix '**/*.mjs' && standardx --fix '**/*.cjs' && standardx --fix './*.mjs' && standardx --fix './*.cjs'",
    "postbuild:cjs": "rimraf ./build/index.cjs.d.ts",
    "postcompile": "npm run build:cjs",
    "posttest": "npm run check",
    "prepare": "npm run compile",
    "pretest": "npm run compile -- -p tsconfig.test.json && cross-env NODE_ENV=test npm run build:cjs",
    "test": "c8 mocha ./test/*.cjs --require ./test/before.cjs --timeout=12000 --check-leaks",
    "test:esm": "c8 mocha ./test/esm/*.mjs --check-leaks"
  },
  "standardx": {
    "ignore": [
      "build",
      "helpers",
      "**/example/**",
      "**/platform-shims/esm.mjs"
    ]
  },
  "type": "module",
  "version": "16.2.0"
}
