{
  "_args": [
    [
      {
        "raw": "karma-coverage@~2.0.3",
        "scope": null,
        "escapedName": "karma-coverage",
        "name": "karma-coverage",
        "rawSpec": "~2.0.3",
        "spec": ">=2.0.3 <2.1.0",
        "type": "range"
      },
      "c:\\Angular\\TaskManager"
    ]
  ],
  "_from": "karma-coverage@~2.0.3",
  "_hasShrinkwrap": false,
  "_id": "karma-coverage@2.0.3",
  "_location": "/karma-coverage",
  "_nodeVersion": "12.18.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/karma-coverage_2.0.3_1595580485998_0.13884375841875007"
  },
  "_npmUser": {
    "name": "karmarunnerbot",
    "email": "karmarunnerbot@gmail.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "karma-coverage@~2.0.3",
    "scope": null,
    "escapedName": "karma-coverage",
    "name": "karma-coverage",
    "rawSpec": "~2.0.3",
    "spec": ">=2.0.3 <2.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/karma-coverage/-/karma-coverage-2.0.3.tgz",
  "_shasum": "c10f4711f4cf5caaaa668b1d6f642e7da122d973",
  "_shrinkwrap": null,
  "_spec": "karma-coverage@~2.0.3",
  "_where": "c:\\Angular\\TaskManager",
  "author": {
    "name": "SATO taichi",
    "email": "ryushi@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/karma-runner/karma-coverage/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "contributors": [
    {
      "name": "dignifiedquire",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Aymeric Beaumet",
      "email": "aymeric@beaumet.me"
    },
    {
      "name": "johnjbarton",
      "email": "johnjbarton@johnjbarton.com"
    },
    {
      "name": "Mark Ethan Trostler",
      "email": "mark@zzo.com"
    },
    {
      "name": "Tim Kang",
      "email": "timkang@ucla.edu"
    },
    {
      "name": "hicom150",
      "email": "hicom150@gmail.com"
    },
    {
      "name": "Nick Malaguti",
      "email": "nmalaguti@palantir.com"
    },
    {
      "name": "Maksim Ryzhikov",
      "email": "rv.maksim@gmail.com"
    },
    {
      "name": "Mark Trostler",
      "email": "mark@zzo.com"
    },
    {
      "name": "nicojs",
      "email": "jansennico@gmail.com"
    },
    {
      "name": "Tanguy Krotoff",
      "email": "tkrotoff@gmail.com"
    },
    {
      "name": "Wei Kin Huang",
      "email": "weikin.huang04@gmail.com"
    },
    {
      "name": "Douglas Duteil",
      "email": "douglasduteil@gmail.com"
    },
    {
      "name": "Matt Winchester",
      "email": "m_winche@yahoo.com"
    },
    {
      "name": "Julen Garcia Leunda",
      "email": "hicom150@gmail.com"
    },
    {
      "name": "Allen Bierbaum",
      "email": "abierbaum@gmail.com"
    },
    {
      "name": "Michael Noack",
      "email": "michael.noack@sealink.com.au"
    },
    {
      "name": "Michael Stramel",
      "email": "m.stramel89@gmail.com"
    },
    {
      "name": "Nick Matantsev",
      "email": "nick.matantsev@gmail.com"
    },
    {
      "name": "Petar Manev",
      "email": "petar.manev2010@gmail.com"
    },
    {
      "name": "Robin Böhm",
      "email": "robinboehm@googlemail.com"
    },
    {
      "name": "Ron Derksen",
      "email": "ron.derksen@informaat.nl"
    },
    {
      "name": "Ruben Bridgewater",
      "email": "ruben.bridgewater@fintura.de"
    },
    {
      "name": "Sahat Yalkabov",
      "email": "sakhat@gmail.com"
    },
    {
      "name": "Srinivas Dhanwada",
      "email": "dhanwada.dev@gmail.com"
    },
    {
      "name": "Tanjo, Hiroyuki",
      "email": "expheno@gmail.com"
    },
    {
      "name": "Taylor Hakes",
      "email": "taylor@taylorhakes.com"
    },
    {
      "name": "Taylor McGann",
      "email": "tmcgann@users.noreply.github.com"
    },
    {
      "name": "Timo Tijhof",
      "email": "krinklemail@gmail.com"
    },
    {
      "name": "Tom Kirkpatrick",
      "email": "tom@systemseed.com"
    },
    {
      "name": "Tyler Waters",
      "email": "tyler.waters@gmail.com"
    },
    {
      "name": "Vincent Lemeunier",
      "email": "vincent.lemeunier+git@gmail.com"
    },
    {
      "name": "Yusuke Suzuki",
      "email": "utatane.tea@gmail.com"
    },
    {
      "name": "aprooks",
      "email": "alexander.prooks@gmail.com"
    },
    {
      "name": "carlos",
      "email": "cafesanu@gmail.com"
    },
    {
      "name": "fbergr",
      "email": "fbergr@gmail.com"
    },
    {
      "name": "piecyk",
      "email": "piecyk@gmail.com"
    },
    {
      "name": "Adam Heath",
      "email": "adam-h@users.noreply.github.com"
    },
    {
      "name": "terussell85",
      "email": "terussell85@gmail.com"
    },
    {
      "name": "Andrew Lane",
      "email": "AndrewLane@users.noreply.github.com"
    },
    {
      "name": "Chris Gladd",
      "email": "chris.m.gladd@gmail.com"
    },
    {
      "name": "Clayton Watts",
      "email": "cletusw@gmail.com"
    },
    {
      "name": "Dan Watling",
      "email": "dan@synaptik.com"
    },
    {
      "name": "Diogo Nicoleti",
      "email": "diogo.nicoleti@gmail.com"
    },
    {
      "name": "Dmitry Petrov",
      "email": "dpetroff@gmail.com"
    },
    {
      "name": "Greg Varsanyi",
      "email": "gvarsanyi@gmail.com"
    },
    {
      "name": "Ian Rufus",
      "email": "ian.j.rufus@gmail.com"
    },
    {
      "name": "James Talmage",
      "email": "james@talmage.io"
    },
    {
      "name": "Joseph Connolly",
      "email": "joec@avinetworks.com"
    },
    {
      "name": "Joshua Appelman",
      "email": "jappelman@xebia.com"
    },
    {
      "name": "Julie",
      "email": "ju.ralph@gmail.com"
    },
    {
      "name": "Kyle Welsby",
      "email": "kyle@mekyle.com"
    },
    {
      "name": "Lloyd Smith II",
      "email": "lloyd@trove.com"
    },
    {
      "name": "Maciej Rzepiński",
      "email": "maciej.rzepinski@gmail.com"
    },
    {
      "name": "Marceli.no",
      "email": "me@marceli.no"
    },
    {
      "name": "Matt Lewis",
      "email": "matthew.lewis@socialsignin.co.uk"
    }
  ],
  "dependencies": {
    "istanbul-lib-coverage": "^3.0.0",
    "istanbul-lib-instrument": "^4.0.1",
    "istanbul-lib-report": "^3.0.0",
    "istanbul-lib-source-maps": "^4.0.0",
    "istanbul-reports": "^3.0.0",
    "minimatch": "^3.0.4"
  },
  "description": "A Karma plugin. Generate code coverage.",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "@commitlint/travis-cli": "^8.3.5",
    "@semantic-release/changelog": "5.0.1",
    "@semantic-release/git": "9.0.0",
    "@semantic-release/npm": "7.0.5",
    "chai": "^4.2.0",
    "eslint": "^6.5.1",
    "eslint-config-standard": "^14.1.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-node": "^10.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "grunt": "^1.0.3",
    "grunt-bump": "^0.8.0",
    "grunt-cli": "^1.3.2",
    "grunt-conventional-changelog": "^6.1.0",
    "grunt-conventional-github-releaser": "^1.0.0",
    "grunt-karma": "^3.0.2",
    "grunt-npm": "^0.0.2",
    "grunt-simple-mocha": "^0.4.1",
    "husky": "^4.2.3",
    "ibrik": "^2.0.0",
    "karma": "^4.2.0",
    "karma-coffee-preprocessor": "1.x || ^0.3.0",
    "karma-firefox-launcher": "1.x || ^0.1.6",
    "karma-mocha": "1.x || ^0.2.0",
    "karma-requirejs": "1.x || ^0.2.2",
    "load-grunt-tasks": "^5.1.0",
    "mocha": "^6.0.2",
    "mocks": "0.0.15",
    "requirejs": "^2.1.20",
    "semantic-release": "17.0.4",
    "sinon": "^7.2.7",
    "sinon-chai": "^3.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-atDvLQqvPcLxhED0cmXYdsPMCQuh6Asa9FMZW1bhNqlVEhJoB9qyZ2BY1gu7D/rr5GLGb5QzYO4siQskxaWP/g==",
    "shasum": "c10f4711f4cf5caaaa668b1d6f642e7da122d973",
    "tarball": "https://registry.npmjs.org/karma-coverage/-/karma-coverage-2.0.3.tgz",
    "fileCount": 23,
    "unpackedSize": 58501,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGqBGCRA9TVsSAnZWagAA4AUP/0bTr/wFfYM5HzaHp+yr\n9DPUxGeFSPb/EalYXgCkVS943YUVzPq+8YHFXHlhQ0/J0z8f9XMrT+HCrl7u\nnEmdbQJqXf88C/mr4YPdYMGQoRrJQKKyLQ/lJV/HbF+F38QhLN32A456RyEC\nZZ1BPEPZ6l4rqY3Mt3vyQW5EfLG1U3O3cybfB6Lq71fPClh0O6F/+/58NTn5\npZcOKY8kBJ01QwX/eaIUmlBLyLOH1HFUtiNTLgGaKaMp1YnhNsB+BooG4dj3\nDPlIkp/xpCke8dyBPEwYR0MCls9viwS9KKlybdeBVbNEB60gxxW0gcIlO5Rx\n4+C/usl/nX4QHvVw6dcwvexlw2ua4Dx1CGQ6zOfBXthsoXx7F5X0PNehFYhY\n8D80f7YYoVQH6xXaS8lnwqwAJH8UiJZ03ubmmpDrMst64h/uml/Bd8WqU7RN\nIDwLALU9Xx7rGiuohtsff3kbKJ5w4Jx4Wu9PMQ5WXS3/0QW3WmRxRL/89Fyw\nOpLpqBhhAC1hBFNGu8RfoydTRG6Pi2HyFvF8t92neTDsWiLALWYGpji5/eL1\nLfJojC386rGCRWTrSdSlXVWVcGn4tcfRQaMrE+kI40mfmJzFtJjx2jHhVeLm\nGJbM6BHAcuf7cl8+SmVP6gPntiRPLnvw+vOLkx0kfZuGl44njkfNVn0p9rUP\nI4Xj\r\n=DDjP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "gitHead": "1d34a56ba612ee3970c99c2e2a4822a50870384c",
  "homepage": "https://github.com/karma-runner/karma-coverage#readme",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "keywords": [
    "karma-plugin",
    "karma-preprocessor",
    "karma-reporter",
    "coverage",
    "istanbul"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dignifiedquire",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "vojtajina",
      "email": "vojta.jina+npm@gmail.com"
    },
    {
      "name": "zzo",
      "email": "mark@zzo.com"
    }
  ],
  "name": "karma-coverage",
  "optionalDependencies": {},
  "readme": "# karma-coverage\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-coverage)\n [![npm version](https://img.shields.io/npm/v/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage) [![npm downloads](https://img.shields.io/npm/dm/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-coverage/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-coverage) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage#info=devDependencies)\n\n> Generate code coverage using [Istanbul].\n\n## Installation\n\nThe easiest way is to install `karma-coverage` as a `devDependency`,\nby running\n\n```bash\nnpm install karma karma-coverage --save-dev\n```\n\n## Configuration\n\nFor configuration details see [docs/configuration](docs/configuration.md).\n\n## Examples\n\n### Basic\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n\n    // coverage reporter generates the coverage\n    reporters: ['progress', 'coverage'],\n\n    preprocessors: {\n      // source files, that you wanna generate coverage for\n      // do not include tests or libraries\n      // (these files will be instrumented by Istanbul)\n      'src/**/*.js': ['coverage']\n    },\n\n    // optionally, configure the reporter\n    coverageReporter: {\n      type : 'html',\n      dir : 'coverage/'\n    }\n  });\n};\n```\n### CoffeeScript\n\nFor an example on how to use with [CoffeeScript](http://coffeescript.org/)\nsee [examples/coffee](examples/coffee). For an example of how to use with\nCoffeeScript and the RequireJS module loader, see\n[examples/coffee-requirejs](examples/coffee-requirejs) (and also see\nthe `useJSExtensionForCoffeeScript` option in\n[docs/configuration.md](docs/configuration.md)).\n\n### Advanced, multiple reporters\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n    reporters: ['progress', 'coverage'],\n    preprocessors: {\n      'src/**/*.js': ['coverage']\n    },\n    coverageReporter: {\n      // specify a common output directory\n      dir: 'build/reports/coverage',\n      reporters: [\n        // reporters not supporting the `file` property\n        { type: 'html', subdir: 'report-html' },\n        { type: 'lcov', subdir: 'report-lcov' },\n        // reporters supporting the `file` property, use `subdir` to directly\n        // output them in the `dir` directory\n        { type: 'cobertura', subdir: '.', file: 'cobertura.txt' },\n        { type: 'lcovonly', subdir: '.', file: 'report-lcovonly.txt' },\n        { type: 'teamcity', subdir: '.', file: 'teamcity.txt' },\n        { type: 'text', subdir: '.', file: 'text.txt' },\n        { type: 'text-summary', subdir: '.', file: 'text-summary.txt' },\n      ]\n    }\n  });\n};\n```\n\n### FAQ\n\n#### Don't minify instrumenter output\n\nWhen using the istanbul instrumenter (default), you can disable code compaction by adding the following to your configuration.\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    coverageReporter: {\n      instrumenterOptions: {\n        istanbul: { noCompact: true }\n      }\n    }\n  });\n};\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n[Istanbul]: https://istanbul.js.org\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/karma-runner/karma-coverage.git"
  },
  "scripts": {
    "lint": "eslint **/*.js",
    "test": "grunt"
  },
  "version": "2.0.3"
}
